openapi: 3.0.2
info:
  title: Accredited Researcher API
  version: '1.0'
  contact:
    name: Chris Milner
    email: chris.milner@hdruk.ac.uk
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
  description: 'Example API to perform 3 actions: a GET API to list all of the accredited researches in JSON format. A GET API to get a specific researchers information. A POST API to check whether a researcher is accredided or not'
servers:
  - url: 'https://locahost:3001'
paths:
  /researchers:
    get:
      summary: List Accredited Researchers
      tags: []
      operationId: list-researchers
      description: List all of the accredited researches in JSON Format
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        researcher_id:
                          type: string
                        first_name:
                          type: string
                        last_name:
                          type: string
                        organisation_id:
                          type: string
                        organisation_name:
                          type: string
                        accreditation_number:
                          type: integer
                        accreditation_type:
                          type: string
                        expiry_date:
                          type: string
                        is_public:
                          type: string
                        application_stage:
                          type: string
                      required:
                        - first_name
                        - last_name
                        - organisation_name
                        - accreditation_number
                        - accreditation_type
                        - expiry_date
                required:
                  - count
      parameters:
        - schema:
            type: number
          in: query
          name: limit
          description: Limit number of users to return
        - schema:
            type: number
          in: query
          name: skip
          description: Skip number of users
  '/researchers/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get researcher by id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accreditation_number:
                    type: string
                  researcher_id:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  organisation_id:
                    type: string
                  organisation_name:
                    type: string
                  accreditation_type:
                    type: string
                  expiry_date:
                    type: string
                  is_public:
                    type: boolean
                  application_stage:
                    type: string
                required:
                  - accreditation_number
                  - first_name
                  - last_name
                  - organisation_name
                  - accreditation_type
                  - expiry_date
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - No user was found for the given ID
                required:
                  - message
      operationId: get-researchers-id
      description: Get researcher information by ID
  /check:
    post:
      summary: Check whether a researcher is accredited
      tags: []
      operationId: check-researcher
      description: List all of the accredited researches in JSON Format
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accreditation_number:
                  type: integer
                researcher_id:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
                email_address:
                  type: string
                organisation_id:
                  type: string
                organisation_name:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  isValid:
                    type: boolean
                    enum:
                      - true
                  data:
                    type: object
                    properties:
                      researcher_id:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      organisation_id:
                        type: string
                      organisation_name:
                        type: string
                      accreditation_number:
                        type: integer
                      accreditation_type:
                        type: string
                      expiry_date:
                        type: string
                      is_public:
                        type: string
                      application_stage:
                        type: string
                    required:
                      - first_name
                      - last_name
                      - organisation_name
                      - accreditation_number
                      - accreditation_type
                      - expiry_date
        '204':
          description: Accreditation expired / User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - The user was found in our database how ever their accreditation expired -OR- No user was found against the provided information
                  isValid:
                    type: boolean
                    enum:
                      - false
        '300':
          description: More than 1 result found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Multiple results were found using your search terms. Please provide an accreditation number for accurate results
      security:
        - Bearer: []
  /batch:
    post:
      summary: Batch check a list of researchers are accredited
      tags: []
      operationId: batch-check-researcher
      description: Check list of accredited researchers in batch - Async via webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                request_id:
                  type: string
                webhook_url:
                  type: string
                  format: uri
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      local_id:
                        type: string
                      accreditation_number:
                        type: integer
                      researcher_id:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      email_address:
                        type: string
                      organisation_name:
                        type: string
                      organisation_id:
                        type: string
                    required:
                      - local_id
              required:
                - request_id
        description: Request payload has a request-id and an optional webhook url for posting back responses async. Each item has a local id to allow the requester to correlate the async response
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        '501':
          description: Not Implemented
        '503':
          description: Service Unavailable
      security:
        - Bearer: []
      x-request-id: null
      x-webhook-url: null
    parameters: []
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Example Security Scheme. Can be anything else OIDC
security:
  - Bearer: []
